/*
 * eXsoR's Charybdis Nano Keymap
 * with trackball.
 *
*/
// Includes

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// Layer Defenitions

#define DEF 0
#define NAV 1
#define SMN 2
#define FUN 3
#define MOU 4
#define SCR 5
#define SNI 6

// Layer-Tap and Mod-Tap Config Preferences

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/* 
 * Combos, Behaviors, and Keymap
 *╭──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────╮
 *   00     01     02     03     04        05     06     07     08     09 
 *├──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┤
 *   10     11     12     13     14        15     16     17     18     19
 *├──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┤
 *   20     21     22     23     24        25     26     27     28     29 
 *╰──────┴──────┴──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────╯
 *                 30     31     32        33     34
 *              ╰──────┴──────┴──────╯  ╰──────┴──────╯
*/

/ {
    behaviors {
        td_1: td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_1";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };

        td_2: td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_2";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LEFT_ALT>;

            tapping-term-ms = <300>;
        };

        td_3: td_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3";
            #binding-cells = <0>;
            bindings = <&kp LA(PSCRN)>, <&kp LEFT_GUI>;

            tapping-term-ms = <300>;
        };

        td_4: td_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            tapping-term-ms = <300>;
        };

        shift_enter: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <34>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        mdlclickRight {
            bindings = <&mkp MCLK>;
            key-positions = <16 18>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        LeftClickLeft {
            bindings = <&mkp LCLK>;
            key-positions = <13 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        RightclickLeft {
            bindings = <&mkp RCLK>;
            key-positions = <11 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        mdlclickLeft {
            bindings = <&mkp MCLK>;
            key-positions = <11 13>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        esc_C {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        tabe_C {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        f8_C {
            bindings = <&kp F8>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <2>;
        };

        caps_C {
            bindings = <&kp CLCK>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <2>;
        };

        shift_C {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        dot_C {
            bindings = <&kp KP_DOT>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            require-prior-idle-ms = <10>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEF";
            bindings = <
  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y   &kp U            &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H   &kp J            &kp K      &kp L    &kp SEMICOLON
  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N   &kp M            &kp COMMA  &kp DOT  &kp SLASH
                &td_2  &td_1  &mo 2    &tog 3  &kp RIGHT_SHIFT
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)           &kp LG(N5)    &kp PRINTSCREEN    &kp BACKSPACE     &kp ENTER          &kp DELETE    &trans
  &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)           &kp LG(N0)    &kp ENTER          &kp LEFT          &kp DOWN           &kp UP_ARROW  &kp RIGHT
  &kp LC(Z)   &kp LC(X)   &kp LC(C)   &mt LC(LS(V)) LC(V)  &kp LC(Y)     &trans             &kp LC(LS(LEFT))  &kp LS(LC(RIGHT))  &trans        &trans
                          &trans      &trans               &trans        &lt FUN BACKSPACE  &kp LSHFT
            >;
        };

        symnum_layer {
            display-name = "SNM";
            bindings = <
  &kp LBRC   &kp AMPERSAND  &kp STAR     &kp LPAR   &kp RBRC     &kp MINUS  &kp N7  &kp N8  &kp N9  &kp N0
  &kp COLON  &kp DOLLAR     &kp PERCENT  &kp CARET  &kp PLUS     &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL
  &kp TILDE  &kp EXCL       &kp AT       &kp POUND  &kp PIPE     &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH
                            &kp RPAR     &kp LPAR   &kp UNDER    &trans     &trans
            >;
        };

        function_layer {
            display-name = "FUN";
            bindings = <
  &kp ESC  &kp F1  &kp F2  &kp F3  &kp F10    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4
  &kp F12  &kp F4  &kp F5  &kp F6  &kp F11    &out OUT_TOG  &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bt BT_CLR
  &trans   &kp F7  &kp F8  &kp F9  &kp F12    &trans        &trans            &trans             &trans           &trans
                   &trans  &trans  &trans     &trans        &trans
            >;
        };

        mouse_layer {
            display-name = "MOU";
            bindings = <
  &trans  &trans   &trans   &trans  &trans    &trans  &trans    &trans    &trans  &trans
  &trans  &trans   &trans   &trans  &trans    &trans  &mkp MB1  &mkp MB2  &trans  &trans
  &trans  &mo SCR  &mo SNI  &trans  &trans    &trans  &trans    &trans    &trans  &trans
                   &trans   &trans  &trans    &trans  &trans
            >;
        };

        scroll_layer {
            display-name = "SCR";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        snipe_layer {
            display-name = "SNI";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
